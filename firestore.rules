rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
  	function isSignedIn(request) {
    	return request.auth.uid != null;
    }
    
    function validateAuthUid(request, data) {
    	return (isSignedIn(request) && request.auth.uid == data);
    }
  
    match /tournaments/{tournamentId} {
      allow read;
      allow update: if validateAuthUid(request, resource.data.owner);
      allow create: if validateAuthUid(request, request.resource.data.owner);
    }
    match /games/{gameId} {
    	allow read;
      allow write: if isSignedIn(request) && (request.auth.uid in get(/databases/$(database)/documents/$(resource.data.tournament)).data.scorers || request.auth.uid == get(/databases/$(database)/documents/$(resource.data.tournament)).data.owner);
    }
    match /users/{userId} {
    	allow read, write: if validateAuthUid(request, userId);
    }
  }
}